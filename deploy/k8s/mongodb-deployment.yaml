apiVersion: v1
kind: Secret
metadata:
  name: mongo-secret
type: Opaque
data:
  username: cm9vdA==  # base64-encoded "root"
  password: ZXhhbXBsZQ==  # base64-encoded "example"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: mongo-pvc
  name: mongo-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi  # Adjust based on your needs
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -o k8s/
    kompose.version: 1.35.0 (HEAD)
  labels:
    io.kompose.service: mongodb
  name: mongodb-service
spec:
  ports:
    - name: "27017"
      port: 27017
      targetPort: 27017
  selector:
    io.kompose.service: mongodb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -o k8s/
    kompose.version: 1.35.0 (HEAD)
  labels:
    io.kompose.service: mongodb
  name: mongodb-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongodb
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -o k8s/
        kompose.version: 1.35.0 (HEAD)
      labels:
        io.kompose.service: mongodb
    spec:
      initContainers:
        - name: init-tcp-fastopen
          image: busybox
          command: ["sh", "-c", "sysctl -w net.ipv4.tcp_fastopen=3"]
          securityContext:
            privileged: true  # Required to modify kernel settings
        - name: init-sysctl
          image: busybox
          command: [ "sh", "-c", "sysctl -w vm.max_map_count=1677720", "sysctl -w vm.swappiness=1" ]
          securityContext:
            privileged: true  # Required to modify sysctl settings
      containers:
        - env:
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: example
            - name: MONGO_INITDB_ROOT_USERNAME
              value: root
          image: mongo:latest
          livenessProbe:
            exec:
              command:
                - mongosh --eval "db.runCommand('ping').ok" --quiet
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 5
          name: mongodb
          resources:
            requests:
              memory: "500Mi"
              cpu: "250m"
            limits:
              memory: "2Gi"
              cpu: "500m"
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
      volumes:
        - name: mongo-storage
          persistentVolumeClaim:
            claimName: mongo-pvc
