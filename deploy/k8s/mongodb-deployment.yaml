apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: mongo-data
  name: mongo-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -o k8s/
    kompose.version: 1.35.0 (HEAD)
  labels:
    io.kompose.service: mongodb
  name: mongodb
spec:
  ports:
    - name: "27017"
      port: 27017
      targetPort: 27017
  selector:
    io.kompose.service: mongodb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -o k8s/
    kompose.version: 1.35.0 (HEAD)
  labels:
    io.kompose.service: mongodb
  name: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongodb
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -o k8s/
        kompose.version: 1.35.0 (HEAD)
      labels:
        io.kompose.service: mongodb
    spec:
      containers:
        - env:
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: example
            - name: MONGO_INITDB_ROOT_USERNAME
              value: root
          image: mongo:latest
          livenessProbe:
            exec:
              command:
                - mongosh --eval "db.runCommand('ping').ok" --quiet
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 5
          name: mongodb
          ports:
            - containerPort: 27017
              protocol: TCP
          volumeMounts:
            - mountPath: /data/db
              name: mongo-data
      restartPolicy: Always
      volumes:
        - name: mongo-data
          persistentVolumeClaim:
            claimName: mongo-data
